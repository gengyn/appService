<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qingzhou.app.client.dao.LoginStatusDao">
	<!-- 登录时获悉客户的合同、报价单等信息 -->
      <select id="selectByLogin" parameterType="map" resultType="UserBase">
		select t1.FORMAL_CONTRACT_ID, --正式合同主键 
       t1.CONTRACT_NUM, --合同编号
       t1.CUSTOMER_ID, --客户ID
       t2.REG_VILLAGE_NAME, --小区名称
       t2.REG_CONSTRUCT_ADDRESS, --施工地址
       t2.REG_CUSTOMER_MGR, --客户经理代码
       t3.NAME as REG_CUSTOMER_MGR_NAME,--客户经理姓名
       t3.MOBILE as REG_CUSTOMER_MGR_MOBILE, --客户经理电话
       t2.REG_Project_Mgr, --工程项目经理代码
       t4.NAME as REG_Project_Mgr_name, --工程项目经理姓名
       t4.MOBILE as REG_Project_Mgr_mobile, --工程项目经理电话
       t2.REG_STYLIST, --设计师代码
       t5.NAME as REG_STYLIST_NAME, --设计师姓名
       t5.MOBILE as REG_STYLIST_mobile,--设计师电话
       t1.QUO_ID, --报价单ID
       t1.BISINESS_ID --企业ID
  from T_SAAS_CONTRACT_FORMAL   t1,
       T_SAAS_CUSTOMER_REGISTER t2,
       USER_BASE_INFO           t3,
       USER_BASE_INFO           t4,
       USER_BASE_INFO           t5
 where t1.CUSTOMER_ID = t2.REG_ID
   and t2.REG_CUSTOMER_MGR = t3.USER_ID(+)
   and t2.REG_Project_Mgr = t4.USER_ID(+)
   and t2.REG_STYLIST = t5.USER_ID(+)
   and t2.REG_CUSTOMER_STATE in ('05','06')
   and t2.REG_NAME = #{user_name}
   and t2.REG_FIRST_MOBILEPHONE = #{user_phone}
    </select>
	<!-- 查询客户登录 -->
     <select id="selectByPK" resultType="loginStatus">
		select user_token, user_name, user_phone, login_time, last_time from t_app_loginstatus 
		where user_token=#{value} 
    </select>
	<!-- 客户登录记录数 -->
	 <select id="countUser_token" resultType="int" >
		select count(user_token) as sumsize 
	 	   from t_app_loginstatus 
		where user_token=#{value} 
	</select>
    <!-- 新增客户登录信息 -->	
    <insert id="insertLoginStatus" parameterType="map">
		INSERT INTO t_app_loginstatus
		 (user_token,user_name,user_phone)
		VALUES
		(#{user_token},	#{user_name},#{user_phone})
	</insert>
    <!-- 更新客户登录信息 -->	
	<update id="updateLoginStatus" parameterType="map" >
		UPDATE t_app_loginstatus set last_time=sysdate
		WHERE user_token=#{user_token}
	</update>
	<!-- 删除客户登录信息 -->	
	<delete id="deleteLoginStatus" parameterType="string">
		DELETE FROM t_app_loginstatus WHERE user_token = #{value}
	</delete>
	<!-- 通过最后修改时间删除登录状态 -->
	<delete id="deleteLoginStatusByTime" >
		DELETE FROM t_app_loginstatus WHERE last_time &lt; sysdate - #{value}
	</delete>
</mapper>